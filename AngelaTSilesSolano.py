import os
from ClasePelicula import Pelicula

class CatalogoPelicula:
    def init(self, nombre, ruta_archivo):
        self.nombre = nombre
        self.ruta_archivo = ruta_archivo
        self.peliculas = []
        self.cargar_peliculas()

    def agregar(self, pelicula):  
     if self.buscar_pelicula(pelicula.id):  
        print(f"âœ•  Ya existe una pelÃ­cula con el ID {pelicula.id}. No se puede agregar.")
        return
     self.peliculas.append(pelicula)
     self.guardar_datos()
     print(f"PelÃ­cula con ID {pelicula.id} agregada correctamente.")  

    def listar(self): 
        if not self.peliculas:
            print("El catÃ¡logo estÃ¡ vacÃ­o.")
        else:
            for pelicula in self.peliculas:
                print(pelicula)

    def eliminar(self):  
        self.peliculas = []
        try:
            os.remove(self.ruta_archivo)
            print("CatÃ¡logo eliminado correctamente.")
        except FileNotFoundError:
            print("El archivo no existe.")

    def buscar_pelicula(self, id):  
        return next((p for p in self.peliculas if p.id == id), None)     

    def guardar_datos(self): 
        try:
            with open(self.ruta_archivo, 'w', encoding='utf-8') as f: 
                for pelicula in self.peliculas:
                    f.write(f"{pelicula.id},{pelicula.titulo},{pelicula.duracion},{pelicula.genero}\n")
        except Exception as e:
            print(f"âœ•  Error al guardar datos: {e}")

    def cargar_peliculas(self):
        if not os.path.exists(self.ruta_archivo):
            open(self.ruta_archivo, 'w', encoding='utf-8').close()      
            return
        try:
            with open(self.ruta_archivo, 'r', encoding='utf-8') as f:     
                for linea in f:
                    datos = linea.strip().split(',')
                    if len(datos) == 4:
                        try:
                            id = int(datos[0])
                            titulo = datos[1]
                            duracion = int(datos[2])
                            genero = datos[3]
                            self.peliculas.append(Pelicula(id, titulo, duracion, genero))
                        except ValueError:
                            print(f"âœ•  Error en los datos: {linea.strip()}")
        except Exception as e:
            print(f"âœ•  Los datos no se pueden cargar: {e}")

def iniciar_programa():               
    archivo = input("Ingrese el nombre del catÃ¡logo de pelÃ­culas: ")
    if not archivo.endswith(".txt"):
        archivo += ".txt"

    if not os.path.exists(archivo):        
       print(f" â†’  El catÃ¡logo {archivo} no existÃ­a y ha sido creado.")
    else:
       print(f" â†’  El catÃ¡logo {archivo} ya existe.")

    catalogo = CatalogoPelicula("Mi CatÃ¡logo", archivo)
    menu(catalogo)

def menu(catalogo): 
    while True:
        print("\nMenÃº de opciones:")
        print("1 â†’  Agregar pelÃ­cula.")
        print("2 â†’  Listar pelÃ­culas.")
        print("3 â†’  Eliminar catÃ¡logo de pelÃ­culas.")
        print("4 â†’  Salir.")
        opcion = input("OpciÃ³n a elegir: ")

        if opcion == "1":
            try:
                print("\n  ðŸ”¹ Por favor, ingrese:")
                id = int(input(" â†’  ID de la pelÃ­cula: "))
                titulo = input(" â†’  TÃ­tulo de la pelÃ­cula: ")
                duracion = int(input(" â†’  DuraciÃ³n (en min): "))
                genero = input(" â†’  GÃ©nero: ")
                pelicula = Pelicula(id, titulo, duracion, genero)
                catalogo.agregar(pelicula)
            except ValueError:
                print("âœ•  Ingrese solo NÃšMEROS para ID y la duraciÃ³n.")

        elif opcion == "2":
            print("\nListado del catÃ¡logo de pelÃ­culas:")
            catalogo.listar()

        elif opcion == "3":
            confirmar = input("Â¿EstÃ¡ seguro de eliminar el catÃ¡logo? â†’ (S/N): ").strip().lower()
            if confirmar == "s":
                catalogo.eliminar()
            elif confirmar == "n":
                menu (catalogo)
            else:
                print("âœ•  Ingrese 's' o 'n' para validar la respuesta.")

        elif opcion == "4":
            print("\nEl programa finalizÃ³. Â¡Nos vemos pronto!ðŸ˜„")
            break
        else:
            print("âœ•  Incorrecto, agregue una opciÃ³n entre 1 - 4.")

print("â€”" * 70)
print("      ðŸŽ¬      Â¡Bienvenido a nuestro CatÃ¡logo de PelÃ­culas!      ðŸŽ¥      ")
print("â€”" * 70)
iniciar_programa()